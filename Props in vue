Props in vue 
Passing data via props in Vue.js allows parent components to send data to child components.
Props are read-only in child components, meaning the child cannot modify them directly.

Eg: 
File name: ParentComp.vue
<template>
  <div>
    <ChildrenComp :whatsApp="whatsappMsg" />
  </div>
</template>
<script>
import ChildrenComp from "./ChildrenComp.vue";
export default {
  name: "ParentComp",
  components: {
    ChildrenComp,
  },
  data() {
    return {
      whatsappMsg: "hi, good morning",
    };
  },
};
</script>

File name: ChildrenComp.vue
<template>
  <div>
    <p>Hey you have received below msg from whatsApp</p>
    <p>{{ whatsApp }}</p>
  </div>
</template>
<script>
export default {
  name: "ChildrenComp",
  props: {
    whatsApp: String,
  },
  data() {
    return {};
  },
};
</script>


Passing Different Types of Data
Vue props can accept: 
âœ” Strings: props: { message: String }
âœ” Numbers: props: { count: Number }
âœ” Booleans: props: { isVisible: Boolean } 
âœ” Objects: props: { user: Object } 
âœ” Arrays: props: { items: Array }

Example of passing an object:
ParentComp.vue
<ChildComponent :user="{ name: 'Alice', age: 25 }" />

ChildComp file:
props: {
  user: Object
}

ðŸš€ Key Rules of Props
âœ” Props are reactive â€“ If parent data updates, child components receive the changes.
âœ” Props are read-only â€“ Child components cannot modify the received prop. 
âœ” Use default values â€“ Props can have default values if none are passed

