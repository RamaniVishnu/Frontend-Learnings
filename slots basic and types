Parent comp

<template>
  <div>
    <p>{{ count }}</p>
    <ChildComp
      @increment="incrementCount"
      @decrement="decrementCount"
      :counter="count"
    />
    <!-- fallback slot -->
    <!-- <ChildTwo>
      <p>content from parent comp</p>
    </ChildTwo> -->

    <!-- named slots
    <ChildTwo>
      <template v-slot:header>this is header</template>
      <template v-slot:main>this is main</template>
      <template v-slot:footer>this is footer</template>
    </ChildTwo> -->

    <!-- scoped slot
    <ChildTwo v-slot="{ user }">
      <li>{{ user.name }}</li>
    </ChildTwo> -->
  </div>
</template>
<script>
import ChildComp from "./ChildComp";
import ChildTwo from "./ChildTwo";
export default {
  data() {
    return {
      count: 0,
    };
  },
  components: {
    ChildComp,
    ChildTwo,
  },
  methods: {
    incrementCount() {
      this.count++;
    },
    decrementCount() {
      this.count--;
    },
  },
};
</script>


ChildComp
<template>
  <!-- fallback slot
  <div>
    <slot> fallback content</slot>
  </div> -->

  <!-- named slots
  <div>
    <slot name="main"></slot>
    <slot name="header"></slot>
    <slot name="footer"></slot>
  </div> -->

  <!-- scoped slot
  <div>
    <ul>
      <li v-for="user in users" :key="user.id">
        <slot :user="user"></slot>
      </li>
    </ul>
  </div> -->
</template>
<script>
export default {
  data() {
    return {
      users: [
        { id: 1, name: "Aarav", age: 28 },
        { id: 2, name: "Meera", age: 32 },
        { id: 3, name: "Ravi", age: 24 },
      ],
    };
  },
};
</script>

